#-------------------------------------------------------------------------------
#                             ANSIBLE MANAGED FILE
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# INFORMATION
#-------------------------------------------------------------------------------
#
# Name   : nginx.conf
# Type   : nginx configuration file
# Role   : nginx
#
# Authors: liv community
# License: Simplified BSD License
#
#-------------------------------------------------------------------------------

# /etc/nginx/nginx.conf

#-------------------------------------------------------------------------------
# CORE
#-------------------------------------------------------------------------------

user nginx;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log /var/log/nginx/error.log warn;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

#-------------------------------------------------------------------------------
# EVENTS
#-------------------------------------------------------------------------------

events {
	# The maximum number of simultaneous connections that can be opened by
	# a worker process.
	worker_connections {{(nginx_worker_connections|int(1024))}};
}

#-------------------------------------------------------------------------------
# HTTP
#-------------------------------------------------------------------------------

http {

	#-----------------------------------------------------------------------
	# MIME
	#-----------------------------------------------------------------------

	# Includes mapping of file name extensions to MIME types of responses
	# and defines the default type.
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Name servers used to resolve names of upstream servers into addresses.
	# It's also needed when using tcpsocket and udpsocket in Lua modules.
	#resolver 208.67.222.222 208.67.220.220;

	#-----------------------------------------------------------------------
	# SECURITY
	#-----------------------------------------------------------------------

	# Don't tell nginx version to clients.
	server_tokens off;

	#-----------------------------------------------------------------------
	# CORE
	#-----------------------------------------------------------------------

	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. If the stated content
	# length is greater than this size, then the client receives the HTTP
	# error code 413. Set to 0 to disable.
	client_max_body_size 1m;

	# Timeout for keep-alive connections. Server will close connections after
	# this time.
	keepalive_timeout 65;

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write().
	sendfile on;

	# Don't buffer data-sends (disable Nagle algorithm).
	# Good for sending frequent small bursts of data in real time.
	tcp_nodelay on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames.
	#tcp_nopush on;

	# Enable gzipping of responses.
	#gzip on;

	# Set the Vary HTTP header as defined in the RFC 2616.
	gzip_vary on;

	# Enable checking the existence of precompressed files.
	#gzip_static on;

	#-----------------------------------------------------------------------
	# LOGGING
	#-----------------------------------------------------------------------

	# Main log format
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
			  '$status $body_bytes_sent "$http_referer" '
			  '"$http_user_agent" "$http_x_forwarded_for"';

	# Main log format + SSL/TLS information
	log_format main_ssl '$remote_addr - $remote_user [$time_local] "$request" '
			    '$status $body_bytes_sent "$http_referer" '
			    '"$http_user_agent" "$http_x_forwarded_for" '
			    '$ssl_protocol/$ssl_cipher ';

	# Sets the path, format, and configuration for a buffered log write.
	access_log /var/log/nginx/access.log main;


	# Includes virtual hosts configs.
	include /etc/nginx/conf.d/*.conf;

	#-----------------------------------------------------------------------
	# VHOSTS
	#-----------------------------------------------------------------------

	# Load modular configuration files from the /etc/nginx/vhosts.d directory.
	include {{file_dst_vhosts_d}}/*.conf;

}
